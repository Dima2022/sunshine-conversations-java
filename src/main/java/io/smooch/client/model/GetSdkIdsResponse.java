/*
 * Smooch
 * The Smooch API is a unified interface for powering messaging in your customer experiences across every channel. Our API speeds access to new markets, reduces time to ship, eliminates complexity, and helps you build the best experiences for your customers. For more information, visit our [official documentation](https://docs.smooch.io).
 *
 * OpenAPI spec version: 5.29
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.smooch.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * GetSdkIdsResponse
 */

public class GetSdkIdsResponse {
  @SerializedName("androidIntegrationId")
  private String androidIntegrationId = null;

  @SerializedName("iosIntegrationId")
  private String iosIntegrationId = null;

  @SerializedName("webIntegrationId")
  private String webIntegrationId = null;

  public GetSdkIdsResponse androidIntegrationId(String androidIntegrationId) {
    this.androidIntegrationId = androidIntegrationId;
    return this;
  }

   /**
   * The ID of the `android` integration, used when initializing the Android SDK.
   * @return androidIntegrationId
  **/
  @ApiModelProperty(required = true, value = "The ID of the `android` integration, used when initializing the Android SDK.")
  public String getAndroidIntegrationId() {
    return androidIntegrationId;
  }

  public void setAndroidIntegrationId(String androidIntegrationId) {
    this.androidIntegrationId = androidIntegrationId;
  }

  public GetSdkIdsResponse iosIntegrationId(String iosIntegrationId) {
    this.iosIntegrationId = iosIntegrationId;
    return this;
  }

   /**
   * The ID of the `ios` integration, used when initializing the iOS SDK.
   * @return iosIntegrationId
  **/
  @ApiModelProperty(required = true, value = "The ID of the `ios` integration, used when initializing the iOS SDK.")
  public String getIosIntegrationId() {
    return iosIntegrationId;
  }

  public void setIosIntegrationId(String iosIntegrationId) {
    this.iosIntegrationId = iosIntegrationId;
  }

  public GetSdkIdsResponse webIntegrationId(String webIntegrationId) {
    this.webIntegrationId = webIntegrationId;
    return this;
  }

   /**
   * The ID of the `web` integration, used when initializing the Web Messenger SDK.
   * @return webIntegrationId
  **/
  @ApiModelProperty(required = true, value = "The ID of the `web` integration, used when initializing the Web Messenger SDK.")
  public String getWebIntegrationId() {
    return webIntegrationId;
  }

  public void setWebIntegrationId(String webIntegrationId) {
    this.webIntegrationId = webIntegrationId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetSdkIdsResponse getSdkIdsResponse = (GetSdkIdsResponse) o;
    return Objects.equals(this.androidIntegrationId, getSdkIdsResponse.androidIntegrationId) &&
        Objects.equals(this.iosIntegrationId, getSdkIdsResponse.iosIntegrationId) &&
        Objects.equals(this.webIntegrationId, getSdkIdsResponse.webIntegrationId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(androidIntegrationId, iosIntegrationId, webIntegrationId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetSdkIdsResponse {\n");
    
    sb.append("    androidIntegrationId: ").append(toIndentedString(androidIntegrationId)).append("\n");
    sb.append("    iosIntegrationId: ").append(toIndentedString(iosIntegrationId)).append("\n");
    sb.append("    webIntegrationId: ").append(toIndentedString(webIntegrationId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

