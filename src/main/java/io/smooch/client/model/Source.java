/*
 * Smooch
 * The Smooch API is a unified interface for powering messaging in your customer experiences across every channel. Our API speeds access to new markets, reduces time to ship, eliminates complexity, and helps you build the best experiences for your customers. For more information, visit our [official documentation](https://docs.smooch.io).
 *
 * OpenAPI spec version: 5.32
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.smooch.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Source
 */

public class Source {
  @SerializedName("id")
  private String id = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("originalMessageId")
  private String originalMessageId = null;

  @SerializedName("originalMessageTimestamp")
  private Double originalMessageTimestamp = null;

  public Source id(String id) {
    this.id = id;
    return this;
  }

   /**
   * An identifier used by Smooch for internal purposes.
   * @return id
  **/
  @ApiModelProperty(value = "An identifier used by Smooch for internal purposes.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Source type(String type) {
    this.type = type;
    return this;
  }

   /**
   * An identifier for the channel from which a message originated. See [**IntegrationTypeEnum**](Enums.md#IntegrationTypeEnum) for available values.
   * @return type
  **/
  @ApiModelProperty(value = "An identifier for the channel from which a message originated. See [**IntegrationTypeEnum**](Enums.md#IntegrationTypeEnum) for available values.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public Source originalMessageId(String originalMessageId) {
    this.originalMessageId = originalMessageId;
    return this;
  }

   /**
   * Message identifier assigned by the originating channel.
   * @return originalMessageId
  **/
  @ApiModelProperty(value = "Message identifier assigned by the originating channel.")
  public String getOriginalMessageId() {
    return originalMessageId;
  }

  public void setOriginalMessageId(String originalMessageId) {
    this.originalMessageId = originalMessageId;
  }

  public Source originalMessageTimestamp(Double originalMessageTimestamp) {
    this.originalMessageTimestamp = originalMessageTimestamp;
    return this;
  }

   /**
   * Message timestamp assigned by the originating channel.
   * @return originalMessageTimestamp
  **/
  @ApiModelProperty(value = "Message timestamp assigned by the originating channel.")
  public Double getOriginalMessageTimestamp() {
    return originalMessageTimestamp;
  }

  public void setOriginalMessageTimestamp(Double originalMessageTimestamp) {
    this.originalMessageTimestamp = originalMessageTimestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Source source = (Source) o;
    return Objects.equals(this.id, source.id) &&
        Objects.equals(this.type, source.type) &&
        Objects.equals(this.originalMessageId, source.originalMessageId) &&
        Objects.equals(this.originalMessageTimestamp, source.originalMessageTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, originalMessageId, originalMessageTimestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Source {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    originalMessageId: ").append(toIndentedString(originalMessageId)).append("\n");
    sb.append("    originalMessageTimestamp: ").append(toIndentedString(originalMessageTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

